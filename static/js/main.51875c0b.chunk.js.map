{"version":3,"sources":["calculators/main.js","components/Daily/Box.tsx","calculators/daily.ts","components/utils/Button.tsx","components/utils/Input.tsx","components/utils/Label.tsx","components/Daily/Filter.tsx","components/Daily/Context.tsx","components/Daily/UniverseSwitch.tsx","components/Daily/Daily.tsx","calculators/fluffy.ts","components/Fluffy/Context.tsx","components/Fluffy/InputSection.tsx","components/Fluffy/LevelUpTable.tsx","components/Fluffy/RunTimeTable.tsx","components/Fluffy/Stats.tsx","components/Fluffy/UniverseSwitch.tsx","components/Fluffy/Template.tsx","components/Fluffy/Fluffy.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["dailyModifiers","minDamage","description","str","prettify","this","getMult","getWeight","minMaxStep","chance","maxDamage","plague","stacks","count","Math","ceil","sqrt","icon","incompatible","stackDesc","weakness","large","dedication","famine","badStrength","badHealth","badMapStrength","badMapHealth","crits","trimpCritChanceUp","trimpCritChanceDown","bogged","dysfunctional","oddTrimpNerf","evenTrimpBuff","karma","window","daily_universe","getMaxStacks","floor","toxic","realStrength","pow","bloodthirst","getFreq","freq","max","text","next","iconOnEnemy","explosive","mult","slippery","rampage","mutimps","size","getMaxCellNum","empower","stacksToAdd","worldStacksOnly","pressure","round","timePerStack","mirrored","reflectChance","getReflectChance","toString","testWeights","min","results","x","result","push","reflectDamage","attack","random","blockU2","heirlost","blockU1","metallicThumb","empoweredVoid","number","numberTmp","prettifySub","toExponential","base","log","game","options","menu","standardNotation","enabled","logBase","global","logNotBase","exponent","suffices","length","suffix","suf2","parseFloat","replace","toFixed","isRewardActive","reward","universe","evolution","level","boughtEarly","minus","WeekBox","_ref","_jsx","className","clsx","baseBox","children","Box","_ref2","object","expanded","setExpanded","useState","value","date","preview","tier","seed","mods","undefined","_jsxs","_Fragment","concat","onClick","id","String","join","role","title","Object","keys","map","i","strength","makeDaily","times","returnable","todayOfWeek","getDailyTimeString","z","dayIndex","lastWeek","blank","dailyObj","getDailyChallenge","dailyValue","getDailyHeliumValueDaily","countDailyWeightDaily","getPrettyTimeString","reduce","prev","curr","hasOwnProperty","findColor","tiers","add","getDayOfWeek","today","Date","setUTCDate","getUTCDate","getUTCDay","year","getUTCFullYear","month","getUTCMonth","day","seedStr","parseInt","getRandomIntSeeded","minIncl","maxExcl","toReturn","sin","seededRandom","everythingInArrayGreaterEqual","smaller","bigger","dateSeed","Number","weightTarget","modifierList","totalChance","dailyObject","item","chanceMod","currentWeight","maxLoops","sizeCount","sizeTarget","mainLoop","maxZLoops","firstChoice","selectedIndex","roll","checkedTotal","y","selectedMod","modObj","modWeight","modSize","splice","incompatibleIndex","indexOf","daily","weight","lastSeed","maybeMakeDaily","force","newestSeed","dailies","Button","label","variant","type","Input","onChange","defaultValue","disabled","MemoInput","React","memo","Label","filterTypes","toMatch","FilterBox","updateDailiesFiltered","useContext","DailyContext","setEnabled","Filter","showFilter","setShowFilter","flipAll","setFlipAll","filter","idx","e","target","createContext","DailyProvider","setDailies","Provider","updateDailies","goodMods","matched","forEach","document","getElementById","style","visibility","forceDailies","UniverseSwitch","handleClick","clickedNumber","days","Daily","extend","require","fluffyInstance","constructor","string","name","firstLevel","iceBonus","expBonus","exp","purchasedFluffyPrestigeBonus","purchasedFluffyExpBonus","zoneYouPortal","dailyBonus","heirloomBonus","graphNextIce","spiresCompleted","instantUpdating","minutesPerRun","averageWorshippers","frigidCompletions","currentExp","traps","autoBattle","mutations","portal","displayData","xpPerRun","currentZone","table","levelUpTable","percentToLevel","bonesToLevel","XPhr","save","fluffyExp","fluffyExp2","fluffyPrestige","fluffyPrestige2","lastPortal","lastRadonPortal","bestFluffyExp","zone","atMaxEvo","getLevel","getFirstLevel","removeExp","getExpBonus","num","getExpGrowth","owned","oneTimers","Battlescruff","maxEnemyLevel","Scruffy","getUpgradeExp","expInLevel","getMinZoneForExp","Classy","getBaseExp","xpFromZone","start","end","minimumZone","mcalc1","mcalc2","Curious","Cunning","addSpireBonus","spireNumber","total","spireXP","getHeirloomValue","bonus","b","getTableCell","prevRuns","getTableData","data","runs","startingLevel","lev","getLevelUpTable","maxZone","zoneLastLeveled","currentRelativeExp","neededExpForLevel","key","updateUniverse","getDailyBonus","updateDisplayData","pasteSaveActions","gameSave","stats","valueTotal","world","heirlooms","Staff","FluffyExp","currentBonus","autoBattleData","u2MutationData","dailyChallenge","talents","purchased","jobs","Worshipper","fluffyAbility","playerSpire","Knowledge","uberNature","empowerments","Ice","saveLocalStorage","localStorage","setItem","JSON","stringify","getLocalStorage","_saveObj$instantUpdat","_saveObj$minutesPerRu","_saveObj$spiresComple","saveObj","parse","getItem","changeVar","Capable","split","active","getDailyHeliumValue","FluffyContext","FluffyProvider","fluffyInstances","setFluffyInstance","shown","setShown","anotherInstance","console","old","TrueFalseButton","colors","isActive","setIsActive","colorClasses","MemoTrueFalseButton","InputSection","_instance$portal","_instance$portal$Capa","_instance$portal2","_instance$portal2$Cun","_instance$portal3","_instance$portal3$Cur","_instance$portal4","_instance$portal4$Cla","index","instance","renderParent","labels","innerText","handleInput","locked","prevProps","nextProps","LevelUpTable","sformat","s","v","RunTimeTable","second","time","cell","Stats","addCommas","width","SaveBox","onPaste","show","setShow","textRef","useRef","current","ref","placeholder","MemoSaveBox","Template","_instance$string","update","setUpdate","forceRefresh","useCallback","changeUniverse","ev","_JSON$parse","save_string","clipboardData","getData","decompressFromBase64","handle_paste","Fluffy","xmlns","viewBox","d","TITLES","swapTheme","to","body","classList","ThemeSwitcher","contains","Tab","location","Link","NavBar","useEffect","useLocation","currentLocation","pathname","App","HashRouter","basename","hashType","Switch","Route","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.51875c0b.chunk.js","sourcesContent":["export var dailyModifiers = {\n  minDamage: {\n    description: function (str) {\n      return (\n        \"Trimp min damage reduced by \" +\n        prettify(this.getMult(str) * 100) +\n        \"% (additive).\"\n      );\n    },\n    getMult: function (str) {\n      return 0.1 + (str - 1) * 0.01;\n    },\n    getWeight: function (str) {\n      return 1 / ((1.2 + (1 - this.getMult(str))) / 2 / 1.1) - 1;\n    },\n    minMaxStep: [41, 90, 1],\n    chance: 1,\n  },\n  maxDamage: {\n    description: function (str) {\n      return (\n        \"Trimp max damage increased by \" +\n        prettify(this.getMult(str) * 100) +\n        \"% (additive).\"\n      );\n    },\n    getMult: function (str) {\n      return str;\n    },\n    getWeight: function (str) {\n      return 1 - (1.2 + (1 + str)) / 2 / 1.1;\n    },\n    minMaxStep: [1, 5, 0.25],\n    chance: 1,\n  },\n  plague: {\n    //Half of electricity\n    description: function (str) {\n      return (\n        \"Enemies stack a debuff with each attack, damaging Trimps for \" +\n        prettify(this.getMult(str, 1) * 100) +\n        \"% of total health per turn per stack, resets on Trimp death.\"\n      );\n    },\n    getMult: function (str, stacks) {\n      return 0.01 * str * stacks;\n    },\n    getWeight: function (str) {\n      var count = Math.ceil((1 + Math.sqrt(1 + 800 / str)) / 2);\n      return (6 - 0.1 * count + 0.8 / count + str / 8) / 1.75;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 0.3,\n    icon: \"*bug2\",\n    incompatible: [\"rampage\", \"weakness\"],\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are taking \" +\n        prettify(this.getMult(str, stacks) * 100) +\n        \"% damage after each attack.\"\n      );\n    },\n  },\n  weakness: {\n    description: function (str) {\n      return (\n        \"Enemies stack a debuff with each attack, reducing Trimp attack by \" +\n        prettify(100 - this.getMult(str, 1) * 100) +\n        \"% per stack. Stacks cap at 9 and reset on Trimp death.\"\n      );\n    },\n    getMult: function (str, stacks) {\n      return 1 - 0.01 * str * stacks;\n    },\n    getWeight: function (str) {\n      return str / 4;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 0.6,\n    icon: \"fire\",\n    incompatible: [\"bogged\", \"plague\"],\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps have \" +\n        prettify(100 - this.getMult(str, stacks) * 100) +\n        \"% less attack.\"\n      );\n    },\n  },\n  large: {\n    description: function (str) {\n      return (\n        \"All housing can store \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% fewer Trimps\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - 0.01 * str;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) * 2;\n    },\n    minMaxStep: [10, 60, 1],\n    chance: 1,\n  },\n  dedication: {\n    description: function (str) {\n      return (\n        \"Gain \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"% more resources from gathering\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.1 * str;\n    },\n    getWeight: function (str) {\n      return 0.075 * str * -1;\n    },\n    incompatible: [\"famine\"],\n    minMaxStep: [5, 40, 1],\n    chance: 0.75,\n  },\n  famine: {\n    description: function (str) {\n      return (\n        \"Gain \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% less Metal, Food, Wood, and Gems from all sources\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - 0.01 * str;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 2;\n    },\n    incompatible: [\"dedication\"],\n    minMaxStep: [40, 80, 1],\n    chance: 2,\n  },\n  badStrength: {\n    description: function (str) {\n      return (\n        \"Enemy attack increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.2 * str;\n    },\n    getWeight: function (str) {\n      return 0.1 * str;\n    },\n    minMaxStep: [5, 15, 1],\n    chance: 1,\n  },\n  badHealth: {\n    description: function (str) {\n      return (\n        \"Enemy health increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.2 * str;\n    },\n    getWeight: function (str) {\n      return 0.2 * str;\n    },\n    minMaxStep: [3, 15, 1],\n    chance: 1,\n  },\n  badMapStrength: {\n    description: function (str) {\n      return (\n        \"Enemy attack in maps increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.3 * str;\n    },\n    getWeight: function (str) {\n      return 0.1 * (1 + 1 / 3) * str;\n    },\n    minMaxStep: [3, 15, 1],\n    chance: 1,\n  },\n  badMapHealth: {\n    description: function (str) {\n      return (\n        \"Enemy health in maps increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.3 * str;\n    },\n    getWeight: function (str) {\n      return 0.3 * str * (5 / 8);\n    },\n    minMaxStep: [3, 10, 1],\n    chance: 1,\n  },\n  crits: {\n    description: function (str) {\n      return (\n        \"Enemies have a 25% chance to crit for \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of normal damage.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.5 * str;\n    },\n    getWeight: function (str) {\n      return 0.15 * this.getMult(str);\n    },\n    minMaxStep: [1, 24, 1],\n    chance: 0.75,\n  },\n  trimpCritChanceUp: {\n    description: function (str) {\n      return (\n        \"Your Trimps have +\" +\n        prettify(this.getMult(str) * 100) +\n        \"% Crit Chance.\"\n      );\n    },\n    getMult: function (str) {\n      return str / 10;\n    },\n    getWeight: function (str) {\n      return 0.25 * str * -1;\n    },\n    minMaxStep: [5, 10, 1],\n    incompatible: [\"trimpCritChanceDown\"],\n    chance: 1.25,\n  },\n  trimpCritChanceDown: {\n    description: function (str) {\n      return (\n        \"Your Trimps have -\" +\n        prettify(this.getMult(str) * 100) +\n        \"% Crit Chance.\"\n      );\n    },\n    getMult: function (str) {\n      return str / 10;\n    },\n    getWeight: function (str) {\n      return str / 4.5;\n    },\n    minMaxStep: [2, 7, 1],\n    incompatible: [\"trimpCritChanceUp\"],\n    chance: 0.75,\n  },\n  bogged: {\n    description: function (str) {\n      return (\n        \"Your Trimps lose \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of their max health after each attack.\"\n      );\n    },\n    getMult: function (str) {\n      return 0.01 * str;\n    },\n    getWeight: function (str) {\n      var count = Math.ceil(1 / this.getMult(str));\n      return (\n        (6 -\n          (0.2 * (count > 60 ? 60 : count)) / 2 +\n          ((500 * count + 400) / count / 500 - 1)) /\n        1.5\n      );\n    },\n    incompatible: [\"rampage\", \"weakness\"],\n    minMaxStep: [1, 5, 1],\n    chance: 0.3,\n  },\n  dysfunctional: {\n    description: function (str) {\n      return (\n        \"Your Trimps breed \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% slower\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - str * 0.05;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 6;\n    },\n    minMaxStep: [10, 18, 1],\n    chance: 1,\n  },\n  oddTrimpNerf: {\n    description: function (str) {\n      return (\n        \"Trimps have \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% less attack on odd numbered Zones\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - str * 0.02;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 1.5;\n    },\n    minMaxStep: [15, 40, 1],\n    chance: 1,\n  },\n  evenTrimpBuff: {\n    description: function (str) {\n      return (\n        \"Trimps have \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"% more attack on even numbered Zones\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + str * 0.2;\n    },\n    getWeight: function (str) {\n      return (this.getMult(str) - 1) * -1;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  karma: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, increasing all non \" +\n        heliumOrRadon(false, true) +\n        \" loot by \" +\n        prettify(this.getMult(str, 1) * 100 - 100) +\n        \"%. Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset after clearing a Zone.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are finding \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more loot!\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor((str % 9) * 25) + 300;\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 9);\n      return 1 + 0.0015 * realStrength * stacks;\n    },\n    getWeight: function (str) {\n      return (this.getMult(str, this.getMaxStacks(str)) - 1) / -2;\n    },\n    icon: \"*arrow-up\",\n    minMaxStep: [1, 45, 1],\n    chance: 1,\n  },\n  toxic: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, reducing breed speed by \" +\n        prettify(100 - this.getMult(str, 1) * 100) +\n        \"% (compounding). Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset after clearing a Zone.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are breeding \" +\n        prettify(100 - this.getMult(str, stacks) * 100) +\n        \"% slower.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor((str % 9) * 25) + 300;\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 9);\n      return Math.pow(1 - 0.001 * realStrength, stacks);\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str, this.getMaxStacks(str)) - 1) / 6;\n    },\n    icon: \"*radioactive\",\n    minMaxStep: [1, 45, 1],\n    chance: 1,\n  },\n  bloodthirst: {\n    description: function (str) {\n      return (\n        \"Enemies gain a stack of Bloodthirst whenever Trimps die. Every \" +\n        this.getFreq(str) +\n        \" stacks, enemies will heal to full and gain an additive 50% attack. Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \" and reset after killing an enemy.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      var freq = this.getFreq(str);\n      var max = this.getMaxStacks(str);\n      var text = \"This Bad Guy\";\n      if (stacks < max) {\n        var next = freq - (stacks % freq);\n        text +=\n          \" will heal to full and gain attack in \" +\n          next +\n          \" stack\" +\n          (next === 1 ? \"\" : \"s\") +\n          \", \" +\n          (stacks >= freq ? \"\" : \" and\") +\n          \" gains 1 stack whenever Trimps die\";\n      }\n      if (stacks >= freq) {\n        if (stacks < max) text += \", and\";\n        text +=\n          \" currently has \" +\n          prettify(this.getMult(str, stacks) * 100 - 100) +\n          \"% more attack\";\n      }\n      text += \".\";\n      return text;\n    },\n    getMaxStacks: function (str) {\n      return this.getFreq(str) * (2 + Math.floor(str / 2));\n    },\n    getFreq: function (str) {\n      return 10 - str;\n    },\n    getMult: function (str, stacks) {\n      var count = Math.floor(stacks / this.getFreq(str));\n      return 1 + 0.5 * count;\n    },\n    getWeight: function (str) {\n      return 0.5 + 0.25 * Math.floor(str / 2);\n    },\n    minMaxStep: [1, 7, 1],\n    chance: 1,\n    icon: \"*flask\",\n    iconOnEnemy: true,\n  },\n  explosive: {\n    description: function (str) {\n      var text =\n        \"Enemies instantly deal \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of their attack damage when killed\";\n      if (str > 15) {\n        text += \" unless your block is as high as your maximum health\";\n      }\n      text += \".\";\n      return text;\n    },\n    getMult: function (str) {\n      return str;\n    },\n    getWeight: function (str) {\n      var mult = this.getMult(str);\n      if (str <= 15) {\n        return (3 / 20) * mult + 1 / 4;\n      } else {\n        return (1 / 14) * mult - 1 / 7;\n      }\n    },\n    get minMaxStep() {\n      if (window.daily_universe === 1) return [5, 30, 1];\n      return [5, 10, 1];\n    },\n    chance: 1,\n  },\n  slippery: {\n    description: function (str) {\n      return (\n        \"Enemies have a \" +\n        prettify(this.getMult(str) * 100) +\n        \"% chance to dodge your attacks on \" +\n        (str <= 15 ? \"odd\" : \"even\") +\n        \" Zones.\"\n      );\n    },\n    getMult: function (str) {\n      if (str > 15) str -= 15;\n      return 0.02 * str;\n    },\n    getWeight: function (str) {\n      return ((1 / (1 - this.getMult(str)) - 1) * 10) / 1.5;\n    },\n    minMaxStep: [1, 30, 1],\n    chance: 1,\n  },\n  rampage: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, increasing Trimp attack by \" +\n        prettify(this.getMult(str, 1) * 100 - 100) +\n        \"% (additive). Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset when your Trimps die.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are dealing \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more damage.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor(((str % 10) + 1) * 10);\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 10);\n      return 1 + 0.01 * realStrength * stacks;\n    },\n    getWeight: function (str) {\n      return (1 - this.getMult(str, 1)) * this.getMaxStacks(str);\n    },\n    icon: \"*fire\",\n    incompatible: [\"plague\", \"bogged\"],\n    minMaxStep: [1, 40, 1],\n    chance: 1,\n  },\n  mutimps: {\n    description: function (str) {\n      var size = str % 5;\n      if (size === 0) size = \"\";\n      else size = \"the first \" + prettify(size * 2) + \" rows of\";\n\n      var name = str < 4 ? \"Mutimps\" : \"Hulking Mutimps\";\n      return (\n        \"40% of Bad Guys in \" +\n        size +\n        \" the World will be mutated into \" +\n        name +\n        \".\"\n      );\n    },\n    getWeight: function (str) {\n      return (str / 10) * 1.5;\n    },\n    getMaxCellNum: function (str) {\n      if (str > 5) str -= 5;\n      str--;\n      var values = [19, 39, 59, 79, 99];\n      return values[str];\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  empower: {\n    description: function (str) {\n      var s = str === 1 ? \"\" : \"s\";\n      return (\n        \"All enemies gain \" +\n        str +\n        \" stack\" +\n        s +\n        \" of Empower whenever your Trimps die in the World. Empower increases the attack and health of Bad Guys in the World by 0.2% per stack, can stack to 9999, and never resets.\"\n      );\n    },\n    getWeight: function (str) {\n      return (str / 6) * 2;\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"This Bad Guy is Empowered and has \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more health and attack.\"\n      );\n    },\n    stacksToAdd: function (str) {\n      return str;\n    },\n    getMult: function (str, stacks) {\n      return 1 + 0.002 * stacks;\n    },\n    getMaxStacks: function (str) {\n      return 9999;\n    },\n    worldStacksOnly: true,\n    iconOnEnemy: true,\n    icon: \"baby-formula\",\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  pressure: {\n    description: function (str) {\n      return (\n        \"Trimps gain a stack of Pressure every \" +\n        Math.round(this.timePerStack(str)) +\n        \" seconds. Each stack of pressure reduces Trimp health by 1%. Max of \" +\n        Math.round(this.getMaxStacks(str)) +\n        \" stacks, stacks reset after clearing a Zone.\"\n      );\n    },\n    getWeight: function (str) {\n      var time = 105 - this.timePerStack(str);\n      var stacks = this.getMaxStacks(str);\n      return (time * 1.3 + stacks) / 200;\n    },\n    getMult: function (str, stacks) {\n      return Math.pow(0.99, stacks);\n    },\n    timePerStack: function (str) {\n      var thisStr = Math.ceil(str / 4) - 1;\n      return 45 + thisStr * 5;\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are under a lot of pressure. Maximum health is reduced by \" +\n        prettify((1 - this.getMult(str, stacks)) * 100) +\n        \"%.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      var thisStr = Math.floor(str % 4);\n      return 45 + thisStr * 5;\n    },\n    icon: \"*heart3\",\n    minMaxStep: [1, 16, 1],\n    chance: 1,\n  },\n  mirrored: {\n    description: function (str) {\n      var reflectChance = this.getReflectChance(str);\n      return (\n        \"Enemies have a\" +\n        (reflectChance.toString()[0] === \"8\" ? \"n\" : \"\") +\n        \" \" +\n        prettify(reflectChance) +\n        \"% chance to reflect an attack, dealing \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of damage taken back to your Trimps.\"\n      );\n    },\n    getReflectChance: function (str) {\n      return Math.ceil(str / 10) * 10;\n    },\n    getMult: function (str) {\n      return ((str % 10) + 1) / 10;\n    },\n    getWeight: function (str) {\n      return (\n        ((this.getReflectChance(str) + 90) / 100) *\n        0.85 *\n        ((this.getMult(str) + 0.9) * 0.85)\n      );\n    },\n    testWeights: function () {\n      var min = 0;\n      var max = 0;\n      var results = [];\n      for (\n        var x = this.minMaxStep[0];\n        x <= this.minMaxStep[1];\n        x += this.minMaxStep[2]\n      ) {\n        var result = this.getWeight(x);\n        if (min === 0) min = result;\n        else if (result < min) min = result;\n        if (result > max) max = result;\n        results.push(result);\n      }\n      return \"Min: \" + min + \", Max: \" + max;\n    },\n    reflectDamage: function (str, attack) {\n      if (Math.floor(Math.random() * 100) >= this.getReflectChance(str))\n        return 0;\n      return this.getMult(str) * attack;\n    },\n    minMaxStep: [1, 100, 1],\n    chance: 1,\n    blockU2: true,\n  },\n  heirlost: {\n    description: function (str) {\n      return \"Heirloom combat and resource bonuses are reduced by \" + str + \"%.\";\n    },\n    getWeight: function (str) {\n      return ((str / 10) + 0.5)\n    },\n    getMult: function (str) {\n      return ((100 - str) / 100);\n    },\n    minMaxStep: [5, 20, 1],\n    chance: 1,\n    blockU1: true,\n  },\n  metallicThumb: {\n    description: function (str) {\n      return (\n        \"Equipment is \" + prettify((1 - this.getMult(str)) * 100) + \"% cheaper.\"\n      );\n    },\n    getWeight: function (str) {\n      return (str + 3) / 26;\n    },\n    getMult: function (str) {\n      return 1 - (str / 100) * 5;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  empoweredVoid: {\n    description: function (str) {\n      return \"Enemies in Void Maps have +\" + prettify((this.getMult(str) - 1) * 100) + \"% increased Attack and Health\";\n    },\n    getWeight: function (str) {\n      return ((str / 10) + 0.5);\n    },\n    getMult: function (str) {\n      return (1 + (str / 10));\n    },\n    minMaxStep: [10, 25, 1],\n    chance: 1,\n    blockU1: true,\n  },\n  /* hemmorrhage: {\n    description: function (str) {\n      var res = this.getResources(str);\n      var text = \"Every 15 seconds, your stored \";\n      for (var x = 1; x < res.length; x++) {\n        if (x === 2) {\n          if (res.length === 3) text += \" and \";\n          else text += \", \";\n        } else if (x === 3) {\n          text += \", and \";\n        }\n        text += res[x].charAt(0).toUpperCase() + res[x].slice(1);\n      }\n      text += \" is reduced by \" + prettify(res[0]) + \"%\";\n      return text;\n    },\n    getResources: function (str) {\n      str = str + \"\";\n      var strength = str.length >= 4 ? parseInt(str[3], 0) : 0;\n      strength = 25 + strength * 5;\n      var res = [strength];\n      if (parseInt(str[0], 10) < 7) res.push(\"food\");\n      if (str.length < 2) {\n        if (res.length < 2) res.push(\"food\");\n        return res;\n      }\n      if (parseInt(str[1], 10) < 7) res.push(\"wood\");\n      if (str.length < 3) {\n        if (res.length < 2) res.push(\"wood\");\n        return res;\n      }\n      if (parseInt(str[2], 10) < 7) res.push(\"metal\");\n      if (res.length < 2) res.push(\"metal\");\n      return res;\n    },\n    getWeight: function (str) {\n      var res = this.getResources(str);\n      var base = 0.3 * res.length * (1 + res[0] / 50);\n      return base;\n    },\n    blockU1: true,\n    minMaxStep: [0, 9999, 1],\n    chance: 2,\n  }, */\n  /* \t\tdisarmed: {\n      equipmentList: [\"Boots\", \"Mace\", \"Helmet\", \"Polearm\", \"Pants\", \"Battleaxe\", \"Shoulderguards\", \"Greatsword\", \"Breastplate\", \"Arbalest\", \"Gambeson\"],\n      description: function (str) {\n        return \"You can't use something\"\n      },\n      getBannedEquipment(str, checkOne){\n        if (checkOne) return (this.equipmentList.indexOf(checkOne) < str);\n      },\n      minMaxStep: [1, 11, 1],\n      chance: 1\n    } */\n};\n\nexport function prettify(number) {\n  var numberTmp = number;\n  // if (!isFinite(number)) return \"<span class='icomoon icon-infinity'></span>\";\n  if (number >= 1000 && number < 10000) return Math.floor(number);\n  if (number === 0) return prettifySub(0);\n  if (number < 0) return \"-\" + prettify(-number);\n  if (number < 0.005) return (+number).toExponential(2);\n\n  var base = Math.floor(Math.log(number) / Math.log(1000));\n  if (base <= 0) return prettifySub(number);\n\n  if (game.options.menu.standardNotation.enabled === 5) {\n    //Thanks ZXV\n    var logBase = game.global.logNotBase;\n    var exponent = Math.log(number) / Math.log(logBase);\n    return prettifySub(exponent) + \"L\" + logBase;\n  }\n\n  number /= Math.pow(1000, base);\n  if (number >= 999.5) {\n    // 999.5 rounds to 1000 and we don’t want to show “1000K” or such\n    number /= 1000;\n    ++base;\n  }\n  if (game.options.menu.standardNotation.enabled === 3) {\n    var suffices = [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ];\n    if (base <= suffices.length) var suffix = suffices[base - 1];\n    else {\n      var suf2 = (base % suffices.length) - 1;\n      if (suf2 < 0) suf2 = suffices.length - 1;\n      suffix = suffices[Math.ceil(base / suffices.length) - 2] + suffices[suf2];\n    }\n  } else {\n    suffices = [\n      \"K\",\n      \"M\",\n      \"B\",\n      \"T\",\n      \"Qa\",\n      \"Qi\",\n      \"Sx\",\n      \"Sp\",\n      \"Oc\",\n      \"No\",\n      \"Dc\",\n      \"Ud\",\n      \"Dd\",\n      \"Td\",\n      \"Qad\",\n      \"Qid\",\n      \"Sxd\",\n      \"Spd\",\n      \"Od\",\n      \"Nd\",\n      \"V\",\n      \"Uv\",\n      \"Dv\",\n      \"Tv\",\n      \"Qav\",\n      \"Qiv\",\n      \"Sxv\",\n      \"Spv\",\n      \"Ov\",\n      \"Nv\",\n      \"Tg\",\n      \"Utg\",\n      \"Dtg\",\n      \"Ttg\",\n      \"Qatg\",\n      \"Qitg\",\n      \"Sxtg\",\n      \"Sptg\",\n      \"Otg\",\n      \"Ntg\",\n      \"Qaa\",\n      \"Uqa\",\n      \"Dqa\",\n      \"Tqa\",\n      \"Qaqa\",\n      \"Qiqa\",\n      \"Sxqa\",\n      \"Spqa\",\n      \"Oqa\",\n      \"Nqa\",\n      \"Qia\",\n      \"Uqi\",\n      \"Dqi\",\n      \"Tqi\",\n      \"Qaqi\",\n      \"Qiqi\",\n      \"Sxqi\",\n      \"Spqi\",\n      \"Oqi\",\n      \"Nqi\",\n      \"Sxa\",\n      \"Usx\",\n      \"Dsx\",\n      \"Tsx\",\n      \"Qasx\",\n      \"Qisx\",\n      \"Sxsx\",\n      \"Spsx\",\n      \"Osx\",\n      \"Nsx\",\n      \"Spa\",\n      \"Usp\",\n      \"Dsp\",\n      \"Tsp\",\n      \"Qasp\",\n      \"Qisp\",\n      \"Sxsp\",\n      \"Spsp\",\n      \"Osp\",\n      \"Nsp\",\n      \"Og\",\n      \"Uog\",\n      \"Dog\",\n      \"Tog\",\n      \"Qaog\",\n      \"Qiog\",\n      \"Sxog\",\n      \"Spog\",\n      \"Oog\",\n      \"Nog\",\n      \"Na\",\n      \"Un\",\n      \"Dn\",\n      \"Tn\",\n      \"Qan\",\n      \"Qin\",\n      \"Sxn\",\n      \"Spn\",\n      \"On\",\n      \"Nn\",\n      \"Ct\",\n      \"Uc\",\n    ];\n    if (\n      game.options.menu.standardNotation.enabled === 2 ||\n      (game.options.menu.standardNotation.enabled === 1 &&\n        base > suffices.length) ||\n      (game.options.menu.standardNotation.enabled === 4 && base > 31)\n    )\n      suffix = \"e\" + base * 3;\n    else if (\n      game.options.menu.standardNotation.enabled &&\n      base <= suffices.length\n    )\n      suffix = suffices[base - 1];\n    else {\n      exponent = parseFloat(numberTmp).toExponential(2);\n      exponent = exponent.replace(\"+\", \"\");\n      return exponent;\n    }\n  }\n  return prettifySub(number) + suffix;\n}\n\nfunction prettifySub(number) {\n  number = parseFloat(number);\n  var floor = Math.floor(number);\n  if (number === floor)\n    // number is an integer, just show it as-is\n    return number;\n  // var precision = 3 - floor.toString().length; // use the right number of digits\n\n  return number.toFixed(3 - floor.toString().length);\n}\nfunction heliumOrRadon() {\n  return window.daily_universe === 1 ? \"Helium\" : \"Radon\";\n}\n\nvar game = {\n  options: {\n    menu: {\n      standardNotation: {\n        enabled: 4,\n      },\n    },\n  },\n};\n\nvar rewards = [\n  \"stickler\",\n  \"helium\",\n  \"liquid\",\n  \"purifier\",\n  \"lucky\",\n  \"void\",\n  \"helium\",\n  \"liquid\",\n  \"eliminator\",\n  \"overkiller\",\n];\nvar prestigeRewards = [\n  \"dailies\",\n  \"voidance\",\n  \"overkiller\",\n  \"critChance\",\n  \"megaCrit\",\n  \"superVoid\",\n  \"voidelicious\",\n  \"naturesWrath\",\n  \"voidSiphon\",\n  \"plaguebrought\",\n];\nvar rewardsU2 = [\n  \"trapper\",\n  \"prism\",\n  \"heirloopy\",\n  \"radortle\",\n  \"healthy\",\n  \"wealthy\",\n  \"critChance\",\n  \"gatherer\",\n  \"dailies\",\n  \"exotic\",\n  \"shieldlayer\",\n  \"tenacity\",\n  \"megaCrit\",\n  \"critChance\",\n  \"smithy\",\n  \"biggerbetterheirlooms\",\n];\n\n// Heirloopy\n// universe === 2 => level === 3 or 2 (depending on talent)\n\n// Dailies\n// universe === 2 => level === 9 or 8 (depending on talent);\n// universe === 1 => 11 - prestige - (?1) >= 0\n\nexport function isRewardActive(\n  reward,\n  universe,\n  evolution,\n  level,\n  boughtEarly\n) {\n  let minus = boughtEarly ? 1 : 0;\n  switch (reward) {\n    case \"dailies\":\n      if (universe === 1) {\n        if (11 - evolution - minus - level <= 0) {\n          return true;\n        }\n      } else {\n        if (level >= 9 - minus) {\n          return true;\n        }\n      }\n      break;\n    case \"heirloopy\":\n      if (universe === 2) {\n        if (level >= 3 - minus) {\n          return true;\n        }\n      }\n      break;\n    default:\n  }\n  return false;\n}\n\nexport function getDailyHeliumValue(weight, active) {\n  var value = 75 * weight + 20;\n  if (value < 100) value = 100;\n  else if (value > 500) value = 500;\n  if (active) value += 100;\n  return value;\n}\n","import clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport { DailyType } from \"../../calculators/daily\";\r\nimport { dailyModifiers } from \"../../calculators/main\";\r\n\r\nexport const WeekBox = function WeekBox({ text }: { text: string }) {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        baseBox,\r\n        \"flex items-center justify-center text-xxs select-none sm:text-xs md:text-base\"\r\n      )}\r\n    >\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst baseBox = \"w-11 h-11 sm:h-16 sm:w-16 md:w-24 md:h-24\";\r\n\r\ninterface Props {\r\n  object: DailyType;\r\n}\r\n\r\nfunction Box({ object }: Props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const { value, date, next, preview, tier, seed, mods } = object;\r\n\r\n  if (value === undefined) return <div className={baseBox}></div>;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={clsx(\r\n          `bg-tier${tier}`,\r\n          baseBox,\r\n          \"relative flex flex-col items-center justify-center text-black rounded shadow cursor-pointer select-none\"\r\n        )}\r\n        onClick={() => setExpanded(!expanded)}\r\n        id={String(seed)}\r\n      >\r\n        <div className=\"absolute top-0 text-xxxxs sm:text-xxs md:text-xs\">\r\n          {date}\r\n        </div>\r\n        <div className=\"text-xxs sm:text-base md:text-xl\">{`${value.toFixed(\r\n          1\r\n        )}%`}</div>\r\n        <div className=\"absolute bottom-0 text-xxxs md:text-xs\">\r\n          {preview.join(\"\")}\r\n          {next && (\r\n            <span role=\"img\" title=\"This is the next daily\">\r\n              ⭐\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {expanded && (\r\n        <span className=\"col-span-7 justify-self-center p-2 w-de bg-secondary border border-solid border-prpl rounded sm:w-deSM md:w-deMD\">\r\n          <p className=\"whitespace-pre-wrap text-xxxs sm:text-xs md:text-base\">\r\n            {date + \"\\n\"}\r\n            {Object.keys(mods).map((x, i) => {\r\n              return (\r\n                \" → \" + dailyModifiers[x].description(mods[x].strength) + \"\\n\"\r\n              );\r\n            })}\r\n            {\"Bonus is \" + value.toFixed(1) + \"%\"}\r\n          </p>\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Box;\r\n","import { dailyModifiers } from \"./main\";\n\nvar mods = {\n  empower: \"E\",\n  explosive: \"e\",\n  toxic: \"T\",\n  pressure: \"P\",\n  plague: \"p\",\n  bogged: \"B\",\n  trimpCritChanceUp: \"+\",\n  trimpCritChanceDown: \"-\",\n  weakness: \"W\",\n  minDamage: \"m\",\n  maxDamage: \"M\",\n  badHealth: \"H\",\n  rampage: \"D\",\n  karma: \"K\",\n  /* hemmorrhage: \"h\", */\n  empoweredVoid: \"eV\",\n  heirlost: \"hl\",\n};\n\ndeclare const window: any;\nwindow.daily_universe = 1;\n\nexport type DailyType = {\n  value?: number;\n  date?: string;\n  next?: boolean;\n  mods?: Partial<DailyMods>;\n  preview?: string[];\n  tier?: 1 | 2 | 3;\n  seed?: number;\n};\n\nexport function makeDaily(times): Partial<DailyType>[] {\n  let returnable: DailyType[] = [];\n  var todayOfWeek: number = getDailyTimeString(0, true);\n  for (var z = 0; z < 8; z++) {\n    var dayIndex = todayOfWeek * -1 + z;\n    if (dayIndex > -1) {\n      dayIndex = z - todayOfWeek - 7;\n    }\n  }\n  var lastWeek = dayIndex - 7;\n  var blank = lastWeek - dayIndex + 1;\n  if (lastWeek === -13) {\n    lastWeek = -6;\n    blank = -7;\n  }\n\n  for (var x = lastWeek; x < times; x++) {\n    let dailyObj = getDailyChallenge(x);\n    let seed = dailyObj.seed;\n    delete dailyObj[\"seed\"];\n    let dailyValue = getDailyHeliumValueDaily(countDailyWeightDaily(dailyObj));\n    if (x < blank) {\n      returnable.push({});\n      continue;\n    }\n    returnable.push({\n      value: dailyValue,\n      date: getPrettyTimeString(x),\n      next: x === 1 ? true : false,\n      mods: dailyObj,\n      preview: Object.keys(dailyObj).reduce((prev, curr) => {\n        if (curr === \"seed\") return prev;\n        if (mods.hasOwnProperty(curr)) {\n          prev.push(mods[curr]);\n        }\n        return prev;\n      }, []),\n      tier: findColor(dailyValue),\n      seed: seed,\n    });\n    // console.log(returnable);\n  }\n  return returnable;\n}\n\nvar tiers = [225, 335, 425];\n\nfunction findColor(value) {\n  if (value <= tiers[0]) {\n    return 1;\n  } else if (value <= tiers[1] && value > tiers[0]) {\n    return 2;\n  } else if (value > tiers[1]) {\n    return 3;\n  }\n}\n\nfunction getDailyTimeString(add: number, getDayOfWeek?: boolean): number {\n  var today = new Date();\n  if (!add) add = 0;\n  today.setUTCDate(today.getUTCDate() + add);\n  if (getDayOfWeek) return today.getUTCDay();\n  var year = today.getUTCFullYear();\n  var month: string | number = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\n  if (month < 10) month = \"0\" + month;\n  var day: string | number = today.getUTCDate();\n  if (day < 10) day = \"0\" + day;\n  var seedStr: string | number = String(year) + String(month) + String(day);\n  seedStr = parseInt(seedStr);\n  return seedStr;\n}\n\nfunction getPrettyTimeString(add: number): string {\n  var today = new Date();\n  if (!add) add = 0;\n  today.setUTCDate(today.getUTCDate() + add);\n  var year = today.getUTCFullYear();\n  var month: number | string = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\n  if (month < 10) month = \"0\" + month;\n  var day: number | string = today.getUTCDate();\n  if (day < 10) day = \"0\" + day;\n  return year + \"-\" + month + \"-\" + day;\n}\n\nfunction getRandomIntSeeded(seed: number, minIncl: number, maxExcl: number) {\n  var toReturn = Math.floor(seededRandom(seed) * (maxExcl - minIncl)) + minIncl;\n  return toReturn === maxExcl ? minIncl : toReturn;\n}\n\nfunction seededRandom(seed: number) {\n  var x = Math.sin(seed++) * 10000;\n  return parseFloat((x - Math.floor(x)).toFixed(7));\n}\n\nfunction everythingInArrayGreaterEqual(smaller, bigger) {\n  if (bigger.length < smaller.length) return false;\n  for (var x = 0; x < smaller.length; x++) {\n    if (smaller[x] > bigger[x]) return false;\n  }\n  return true;\n}\n\nexport type DailyMods = {\n  seed: number;\n  empower?: object;\n  explosive?: object;\n  toxic?: object;\n  pressure?: object;\n  plague?: object;\n  bogged?: object;\n  trimpCritChanceUp?: object;\n  trimpCritChanceDown?: object;\n  weakness?: object;\n  minDamage?: object;\n  maxDamage?: object;\n  badHealth?: object;\n  rampage?: object;\n  karma?: object;\n  /* hemmorrhage?: object; */\n  heirlost?: object;\n  empoweredVoid?: object;\n};\n\nfunction getDailyChallenge(add: number) {\n  // checkCompleteDailies();\n  var dateSeed = getDailyTimeString(add);\n  var seedStr = getRandomIntSeeded(Number(dateSeed) + 2, 1, 1e9);\n  //seedStr = getRandomIntSeeded(seedStr, 1, 1e9);\n  var weightTarget = getRandomIntSeeded(seedStr++, 25, 51) / 10;\n  //Build a list of all modifiers to choose from\n  var modifierList = [];\n  var totalChance = 0;\n  var dailyObject: Partial<DailyMods> = {};\n  for (var item in dailyModifiers) {\n    if (window.daily_universe === 1 && dailyModifiers[item].blockU1) continue;\n    if (window.daily_universe === 2 && dailyModifiers[item].blockU2) continue;\n    modifierList.push(item);\n    totalChance += dailyModifiers[item].chance;\n  }\n  var chanceMod = 1000 / totalChance;\n  var currentWeight = 0;\n  var maxLoops = modifierList.length;\n  var sizeCount = [0, 0, 0]; // < 0.3, < 1, >= 1\n  var sizeTarget = [\n    getRandomIntSeeded(seedStr++, 0, 2),\n    getRandomIntSeeded(seedStr++, 1, 5),\n    getRandomIntSeeded(seedStr++, 2, 6),\n  ];\n  if (weightTarget < 2.75) {\n    sizeTarget[2] = 0;\n    sizeTarget[0] += 2;\n  }\n  mainLoop: for (var x = 0; x < maxLoops; x++) {\n    var maxZLoops = modifierList.length;\n    var firstChoice = [];\n    for (var z = 0; z < maxZLoops; z++) {\n      var roll = getRandomIntSeeded(seedStr++, 0, 1000);\n      var selectedIndex;\n      var checkedTotal = 0;\n      for (var y = 0; y < modifierList.length; y++) {\n        checkedTotal += dailyModifiers[modifierList[y]].chance * chanceMod;\n        if (roll < checkedTotal || y === modifierList.length - 1) {\n          totalChance -= dailyModifiers[modifierList[y]].chance;\n          chanceMod = 1000 / totalChance;\n          selectedIndex = y;\n          break;\n        }\n      }\n      var selectedMod = modifierList[selectedIndex];\n      var modObj = dailyModifiers[selectedMod];\n      var str =\n        modObj.minMaxStep[0] +\n        getRandomIntSeeded(\n          seedStr++,\n          0,\n          Math.floor(\n            (modObj.minMaxStep[1] + modObj.minMaxStep[2]) *\n            (1 / modObj.minMaxStep[2])\n          ) - modObj.minMaxStep[0]\n        ) *\n        modObj.minMaxStep[2];\n      var modWeight = modObj.getWeight(str);\n      var modSize = modWeight < 0.85 ? 0 : modWeight < 1.85 ? 1 : 2;\n      if (modWeight + currentWeight > weightTarget + 1) continue;\n      if (everythingInArrayGreaterEqual(sizeTarget, sizeCount)) {\n        //use it and stuff\n      } else if (\n        sizeCount[modSize] >= sizeTarget[modSize] &&\n        z !== maxZLoops - 1\n      ) {\n        if (!firstChoice.length)\n          firstChoice = [selectedMod, str, selectedIndex, modSize, modWeight];\n        continue;\n      } else if (z === maxZLoops - 1 && firstChoice.length) {\n        selectedMod = firstChoice[0];\n        modObj = dailyModifiers[selectedMod];\n        selectedIndex = firstChoice[2];\n        str = firstChoice[1];\n        modSize = firstChoice[3];\n        modWeight = firstChoice[4];\n      }\n      //It's been officially selected by this point\n      sizeCount[modSize]++;\n      dailyObject[modifierList[selectedIndex]] = {\n        strength: str,\n        stacks: 0,\n      };\n      currentWeight += modWeight;\n      if (\n        x > 0 &&\n        (currentWeight > weightTarget ||\n          (currentWeight >= weightTarget - 0.5 &&\n            currentWeight <= weightTarget + 0.5))\n      ) {\n        break mainLoop;\n      }\n      modifierList.splice(selectedIndex, 1);\n      if (modObj.incompatible) {\n        for (let x = 0; x < modObj.incompatible.length; x++) {\n          //jshint ignore:line\n          var incompatibleIndex = modifierList.indexOf(modObj.incompatible[x]);\n          if (incompatibleIndex >= 0) {\n            modifierList.splice(incompatibleIndex, 1);\n          }\n        }\n      }\n      break;\n    }\n  }\n  dailyObject.seed = Number(dateSeed);\n  // console.log(dailyObject);\n  return dailyObject;\n}\n\nexport function countDailyWeightDaily(daily) {\n  var weight = 0;\n  let dailyObj = daily;\n  for (var item in dailyObj) {\n    if (item === \"seed\") continue;\n    weight += dailyModifiers[item].getWeight(dailyObj[item].strength);\n  }\n  return weight;\n}\n\nexport function getDailyHeliumValueDaily(weight) {\n  var value = 75 * weight + 20;\n  if (value < 100) value = 100;\n  else if (value > 500) value = 500;\n  return value;\n}\n\nlet lastSeed;\n\nexport function maybeMakeDaily(times, force) {\n  let newestSeed = getDailyTimeString(0);\n  if (lastSeed === newestSeed && force === false) {\n    return [];\n  } else {\n    let dailies = makeDaily(times);\n    lastSeed = newestSeed;\n    return dailies;\n  }\n}\n\nmakeDaily(24);\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  onClick?: (e?: any) => void;\r\n  className?: string;\r\n  label: string;\r\n  variant?: \"small\";\r\n}\r\n\r\nfunction Button({ onClick, className, label, variant }: Props) {\r\n  return (\r\n    <input\r\n      type=\"button\"\r\n      className={clsx(\r\n        className,\r\n        variant === \"small\"\r\n          ? \"p-1 text-xs sm:text-base\"\r\n          : \" text-sm sm:text-base p-2\",\r\n        \"self-center bg-secondary border border-solid border-accent rounded focus:outline-none shadow cursor-pointer select-none\"\r\n      )}\r\n      onClick={onClick}\r\n      value={label}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  onChange?: (e) => void;\r\n  className?: string;\r\n  defaultValue?: string | number;\r\n  value?: string | number;\r\n  type?: string;\r\n  min?: number;\r\n  max?: number;\r\n  variant?: \"fluffy\";\r\n  disabled?: true;\r\n}\r\n\r\nconst Input = ({\r\n  onChange,\r\n  className,\r\n  defaultValue,\r\n  value,\r\n  type,\r\n  min,\r\n  max,\r\n  variant,\r\n  disabled,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"relative mt-0.5 rounded shadow\">\r\n      <input\r\n        type={variant === \"fluffy\" ? (type ? type : \"number\") : null}\r\n        onChange={onChange}\r\n        defaultValue={defaultValue}\r\n        value={value}\r\n        min={variant === \"fluffy\" ? (min ? min : 0) : null}\r\n        max={max}\r\n        disabled={disabled ?? null}\r\n        className={clsx(\r\n          className,\r\n          \"block p-1 pl-2 w-full text-xs bg-secondary border border-solid border-accent rounded focus:outline-none sm:text-base\"\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MemoInput = React.memo(Input);\r\n\r\nexport default Input;\r\n","import clsx from \"clsx\";\r\nimport React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  children: React.ReactChild | React.ReactChild[];\r\n  className?: string;\r\n}\r\n\r\nexport default function Label({ children, className }: Props): ReactElement {\r\n  return (\r\n    <label className={clsx(className, \"block text-left text-xxs sm:text-xs\")}>\r\n      {children}\r\n    </label>\r\n  );\r\n}\r\n","import clsx from \"clsx\";\nimport React, { useContext, useState } from \"react\";\nimport Button from \"../utils/Button\";\nimport Input from \"../utils/Input\";\nimport Label from \"../utils/Label\";\nimport { DailyContext } from \"./Context\";\n\nexport var filterTypes = {\n  minDamage: true,\n  maxDamage: true,\n  plague: true,\n  weakness: true,\n  large: true,\n  dedication: true,\n  famine: true,\n  badStrength: true,\n  badHealth: true,\n  badMapStrength: true,\n  badMapHealth: true,\n  crits: true,\n  bogged: true,\n  dysfunctional: true,\n  oddTrimpNerf: true,\n  evenTrimpBuff: true,\n  karma: true,\n  toxic: true,\n  bloodthirst: true,\n  explosive: true,\n  slippery: true,\n  rampage: true,\n  mutimps: true,\n  empower: true,\n  pressure: true,\n  mirrored: true,\n  metallicThumb: true,\n  trimpCritChanceUp: true,\n  trimpCritChanceDown: true,\n  heirlost: true,\n  empoweredVoid: true,\n  /* hemmorrhage: true, */\n};\n\ndeclare const window: any;\n\nexport var toMatch = 2;\n\nfunction FilterBox({ type }: { type: string }) {\n  const { updateDailiesFiltered } = useContext(DailyContext);\n  const [enabled, setEnabled] = useState(filterTypes[type]);\n\n  return (\n    <>\n      <div\n        className={clsx(\n          filterTypes[type] ? \"bg-tier3\" : \"bg-tier1\",\n          \"m-0.5 p-1 w-min text-black text-xxs shadow cursor-pointer select-none sm:text-xs md:text-sm\"\n        )}\n        onClick={() => {\n          filterTypes[type] = !filterTypes[type];\n\n          updateDailiesFiltered();\n\n          setEnabled(!enabled);\n        }}\n      >\n        {type}\n      </div>\n    </>\n  );\n}\n\nfunction Filter() {\n  const [showFilter, setShowFilter] = useState(false);\n  const { updateDailiesFiltered } = useContext(DailyContext);\n\n  // Specifically for forcing component to rerender when updating filter types.\n  const [flipAll, setFlipAll] = useState(false);\n\n  return (\n    <>\n      <Button\n        className=\"my-2\"\n        onClick={() => {\n          setShowFilter(!showFilter);\n        }}\n        label=\"Filter\"\n      />\n\n      {showFilter && (\n        <div className=\"w-11/12 text-center sm:w-9/12 md:w-3/4 lg:w-5/12\">\n          <div className=\"flex flex-wrap justify-center\">\n            {Object.keys(filterTypes)\n              .filter(\n                (type) =>\n                  ([\"heirlost\", \"empoweredVoid\", \"hemmorrhage\"].indexOf(type) !== -1 && window.daily_universe === 1) ===\n                  false\n              )\n              .filter(\n                (type) =>\n                  ([\"mirrored\"].indexOf(type) !== -1 && window.daily_universe === 2) ===\n                  false\n              )\n              .map((type, idx) => {\n                return <FilterBox key={idx} type={type} />;\n              })}\n          </div>\n          <div className=\"flex justify-center mt-2\">\n            <Button\n              className=\"mr-2\"\n              onClick={() => {\n                for (var type in filterTypes) {\n                  filterTypes[type] = !filterTypes[type];\n                }\n\n                setFlipAll(!flipAll);\n\n                updateDailiesFiltered();\n              }}\n              label=\"Flip All\"\n            />\n            <Label className=\"ml-2 w-24\">\n              Match Atleast\n              <Input\n                type=\"number\"\n                onChange={(e) => {\n                  toMatch = Number(e.target.value);\n                  updateDailiesFiltered();\n                }}\n                defaultValue={toMatch}\n              />\n            </Label>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","import React, { createContext, useState } from \"react\";\r\nimport { DailyType, maybeMakeDaily } from \"../../calculators/daily\";\r\nimport { filterTypes, toMatch } from \"./Filter\";\r\n\r\ninterface ContextType {\r\n  dailies?: DailyType[];\r\n  updateDailies?: any;\r\n  updateDailiesFiltered?: any;\r\n  forceDailies?: any;\r\n}\r\n\r\nexport const DailyContext = createContext<ContextType>({});\r\n// const initial_dailies = maybeMakeDaily(365);\r\nconst DailyProvider = ({ children }) => {\r\n  const [dailies, setDailies] = useState(() => maybeMakeDaily(365, true));\r\n\r\n  const updateDailies = () => {\r\n    const updateDailies = maybeMakeDaily(365, false);\r\n    if (updateDailies.length === 0) {\r\n      return;\r\n    }\r\n    setDailies(updateDailies);\r\n  };\r\n\r\n  const updateDailiesFiltered = () => {\r\n    const goodMods = Object.keys(filterTypes).filter((x) => filterTypes[x]);\r\n    for (var x = 0; x < dailies.length; x++) {\r\n      if (Object.keys(dailies[x]).length === 0) continue;\r\n\r\n      let matched = 0;\r\n\r\n      Object.keys(dailies[x].mods).forEach((y, i) => {\r\n        if (goodMods.indexOf(y) !== -1) {\r\n          matched += 1;\r\n        }\r\n      });\r\n\r\n      if (matched >= toMatch) {\r\n        document.getElementById(String(dailies[x].seed)).style.visibility = \"\";\r\n      } else {\r\n        document.getElementById(String(dailies[x].seed)).style.visibility =\r\n          \"hidden\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const forceDailies = () => {\r\n    setDailies(maybeMakeDaily(365, true));\r\n  };\r\n\r\n  return (\r\n    <DailyContext.Provider\r\n      value={{ dailies, updateDailies, updateDailiesFiltered, forceDailies }}\r\n    >\r\n      {children}\r\n    </DailyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DailyProvider;\r\n","import clsx from \"clsx\";\r\nimport React, { useContext } from \"react\";\r\nimport { DailyContext } from \"./Context\";\r\n\r\ndeclare const window: any;\r\n\r\nfunction UniverseSwitch() {\r\n  const { forceDailies } = useContext(DailyContext);\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    let clickedNumber = Number((e.target as HTMLDivElement).title);\r\n    if (window.daily_universe === clickedNumber) {\r\n      return;\r\n    } else {\r\n      window.daily_universe = clickedNumber;\r\n      forceDailies();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex mt-5 shadow-md\">\r\n      <div\r\n        className={clsx(\r\n          window.daily_universe === 1\r\n            ? \"bg-blue-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-2 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"1\"\r\n      >\r\n        Universe 1\r\n      </div>\r\n      <div\r\n        className={clsx(\r\n          window.daily_universe === 2\r\n            ? \"bg-pink-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-2 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"2\"\r\n      >\r\n        Universe 2\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UniverseSwitch;\r\n","import React, { useContext } from \"react\";\r\nimport Box, { WeekBox } from \"./Box\";\r\nimport { DailyContext } from \"./Context\";\r\nimport Filter from \"./Filter\";\r\nimport UniverseSwitch from \"./UniverseSwitch\";\r\n\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nfunction Daily() {\r\n  const { dailies } = useContext(DailyContext);\r\n\r\n  return (\r\n    <div className=\"flex flex-col flex-wrap items-center\">\r\n      <UniverseSwitch />\r\n\r\n      <Filter />\r\n      <div className=\"grid gap-2 grid-cols-7 mb-4\">\r\n        {days.map((x, idx) => {\r\n          return <WeekBox key={idx} text={x} />;\r\n        })}\r\n        {dailies.map((x, idx) => {\r\n          return <Box object={x} key={idx} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","import { decompressFromBase64 } from \"lz-string\";\n// import { testSave1 } from \"../test/testSave1.js\";\nimport { countDailyWeightDaily, DailyMods } from \"./daily\";\nimport { AutoBattleData, mutationData, GameObject, Portal, Traps } from \"./GameObject.d\";\nimport { getDailyHeliumValue, isRewardActive } from \"./main\";\n\nconst extend = require(\"node.extend/lib/extend\");\n// const {\n// getUniverseChange,\n// getLevel,\n// getDailyBonus,\n// getExpBonus,\n// } = require(\"./fluffy\");\n// const { getHeirloomValue } = require(\"./main\");\n\nexport function handle_paste(ev): { game: GameObject; string: string } | false {\n  var save_string = ev.clipboardData.getData(\"text/plain\").replace(/\\s/g, \"\");\n  const game = JSON.parse(decompressFromBase64(save_string)) ?? null;\n  if (game?.global === undefined) return false;\n\n  return {\n    game,\n    string: save_string,\n  };\n}\n\nconst growth = 4;\nconst baseExp = 50;\nconst prestigeExpModifier = 5;\nconst baseFirstLevel = 1000;\nconst maxEvolution = 10;\n\nexport interface displayData {\n  xpPerRun: number;\n  currentZone: number;\n  table: [number[]];\n  levelUpTable: {};\n  percentToLevel: number;\n  bonesToLevel: number;\n  XPhr: number;\n  name: string;\n}\n\nexport class fluffyInstance {\n  string: string;\n\n  name = \"init\"; // getUniverseChange\n  firstLevel = 1000;\n  level = 0; // getLevel\n\n  iceBonus = 0;\n  expBonus = 0;\n\n  exp = 0; // game.global.fluffyExp/2 // getUniverseChange\n  evolution = 0; // game.global.fluffyPrestige/2 // getUniverseChange\n\n  purchasedFluffyPrestigeBonus = false;\n  purchasedFluffyExpBonus = false;\n\n  // Edit in inputs\n  universe = 1; // getUniverseChange\n  zoneYouPortal = 0; // getUniverseChange\n  dailyBonus = 0;\n  heirloomBonus = 0;\n  graphNextIce = false;\n  spiresCompleted = [];\n  instantUpdating = false;\n  minutesPerRun = 14;\n  averageWorshippers = 0;\n  frigidCompletions = 0;\n  //\n  currentExp = 0;\n\n  traps: Traps; // game.playerSpire.traps.Knowledge\n\n  autoBattle: AutoBattleData;\n  mutations: mutationData;\n\n  daily: DailyMods; // game.global.dailyChallenge\n\n  portal: Portal;\n\n  displayData: displayData = {\n    xpPerRun: 0,\n    currentZone: 0,\n    table: [[]],\n    levelUpTable: {},\n    percentToLevel: 0,\n    bonesToLevel: 0,\n    XPhr: 0,\n    name: \"init\",\n  };\n\n  save = {\n    fluffyExp: 0,\n    fluffyExp2: 0,\n    fluffyPrestige: 0,\n    fluffyPrestige2: 0,\n    lastPortal: 0, // game.global.lastPortal\n    lastRadonPortal: 0, // game.global.lastRadonPortal\n    bestFluffyExp: 0,\n    zone: [0, 0],\n    heirloomBonus: 0,\n  };\n\n  atMaxEvo = () => {\n    if (this.universe === 2) return true;\n    if (this.evolution === maxEvolution) return true;\n    return false;\n  };\n\n  getLevel = (evolution: number, exp: number) => {\n    return Math.floor(\n      Math.log((exp / this.getFirstLevel(evolution)) * (growth - 1) + 1) /\n      Math.log(growth)\n    );\n  };\n\n  getFirstLevel = (evolution: number) => {\n    return baseFirstLevel * Math.pow(prestigeExpModifier, evolution);\n  };\n\n  removeExp = (evolution: number, level: number) => {\n    if (level === 10) return 0;\n    return Math.floor(\n      this.firstLevel *\n      Math.pow(prestigeExpModifier, evolution) *\n      ((Math.pow(growth, level) - 1) / (growth - 1))\n    );\n  };\n\n  getExpBonus = () => {\n    let num = 1;\n    if (this.universe === 1) {\n      num *= this.getExpGrowth();\n    }\n    if (this.dailyBonus > 1) {\n      num *= this.dailyBonus;\n    }\n    if (this.heirloomBonus > 1) {\n      num *= this.heirloomBonus;\n    }\n    if (this.purchasedFluffyExpBonus) {\n      num *= 0.25 * this.evolution + 1;\n    }\n    if (this.traps.owned > 0) {\n      num *= (0.15 + (this.traps.level - 1) * 0.075) * this.traps.owned + 1;\n    }\n    if (this.graphNextIce && this.iceBonus > 1) {\n      num *= this.iceBonus;\n    }\n    if (this.frigidCompletions > 0) {\n      num *= 1 + (((this.frigidCompletions / 2) * (this.frigidCompletions + 1)) / 40);\n    }\n\n    if (this.universe === 2) {\n      if (this.averageWorshippers > 0) {\n        num *= this.averageWorshippers * 0.05 * 0.375 + 1;\n      }\n\n      if (this.autoBattle.oneTimers.Battlescruff) {\n        num *= 1 + (this.autoBattle.maxEnemyLevel - 1) / 50;\n      }\n\n      if (this.mutations.Scruffy) {\n        num *= 1.3;\n      }\n    }\n\n    return num;\n  };\n\n  getUpgradeExp = (evolution: number, level: number, expInLevel: number) => {\n    if (level === 10) {\n      return this.currentExp;\n    }\n    return Math.floor(\n      this.firstLevel *\n      Math.pow(prestigeExpModifier, evolution) *\n      ((Math.pow(growth, level + 1) - 1) / (growth - 1)) -\n      this.removeExp(evolution, level)\n    );\n  };\n\n  getMinZoneForExp = () => {\n    if (this.universe === 1) {\n      var zone = 301;\n      if (this.portal.Classy.level) zone -= this.portal.Classy.level * 3;\n      return Math.floor(zone);\n    } else {\n      return 0;\n    }\n  };\n\n  getExpGrowth = () => {\n    if (this.universe === 2) return 1.02;\n    return 1.015;\n  };\n\n  getBaseExp = () => {\n    if (this.universe === 2) return 2.5;\n    return 50;\n  };\n\n  xpFromZone = (start: number, end: number): number => {\n    const minimumZone = this.getMinZoneForExp();\n    // If ending before you're actually allowed to get xp then return nothing.\n    let mcalc1: number, mcalc2: number;\n\n    if (end < minimumZone) {\n      return 0;\n    }\n    // If starting before you're allowed to get xp, set start to min zone.\n    if (start < minimumZone) {\n      start = minimumZone;\n    }\n\n    if (this.universe === 1) {\n      mcalc1 =\n        (Math.pow(this.getExpGrowth(), end - minimumZone) - 1) /\n        (this.getExpGrowth() - 1);\n      mcalc2 =\n        (this.getBaseExp() + this.portal.Curious.level * 80) *\n        (1 + this.portal.Cunning.level * 0.25) *\n        this.expBonus;\n    } else {\n      mcalc1 =\n        (Math.pow(Math.pow(this.getExpGrowth(), 3), end) - 1) /\n        (Math.pow(this.getExpGrowth(), 3) - 1);\n      mcalc2 = this.getBaseExp() * this.expBonus;\n    }\n\n    let addSpireBonus = 0;\n\n    if (this.universe === 1 && this.spiresCompleted.length > 0) {\n      const spiresCompletedZones = this.spiresCompleted.map(\n        (spireNumber) => (spireNumber + 1) * 100\n      );\n\n      addSpireBonus = spiresCompletedZones.reduce((total, zone) => {\n        if (start < zone && end > zone) return total + this.spireXP(zone);\n\n        return total;\n      }, 0);\n    }\n\n    // Minus all of the previous zone xp.\n    if (start > minimumZone) {\n      return (\n        mcalc1 * mcalc2 + addSpireBonus - this.xpFromZone(minimumZone, start)\n      );\n    } else {\n      return mcalc1 * mcalc2 + addSpireBonus;\n    }\n  };\n\n  spireXP = (zone: number) => {\n    var reward =\n      (baseExp + this.portal.Curious.level * 80) *\n      Math.pow(this.getExpGrowth(), zone - this.getMinZoneForExp() - 1) *\n      (1 + this.portal.Cunning.level * 0.25);\n    return reward * this.expBonus * this.getExpGrowth();\n  };\n\n  getHeirloomValue = (\n    bonus: number,\n    universe: number,\n    evolution: number,\n    level: number,\n    boughtEarly: boolean\n  ) => {\n    var b = bonus / 100 + 1;\n    if (\n      universe === 2 &&\n      !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\n    )\n      b = (b - 1) * 0.1 + 1;\n    if (b > 1) {\n      return b;\n    } else if (b === 1) {\n      return 1;\n    }\n  };\n\n  getTableCell = (evolution: number, level: number, prevRuns: number) => {\n    if (this.evolution === evolution && this.level > level) {\n      return 0;\n    }\n\n    const xpPerRun = this.displayData.xpPerRun;\n\n    const currentExp = this.evolution === evolution ? this.currentExp : 0;\n\n    const neededExpForLevel = this.getUpgradeExp(evolution, level, currentExp);\n\n    const runs = (neededExpForLevel - currentExp) / xpPerRun;\n    return runs + prevRuns;\n  };\n\n  getTableData = () => {\n    let evolution = this.evolution;\n\n    this.displayData.xpPerRun = Math.round(\n      this.xpFromZone(0, this.zoneYouPortal)\n    );\n\n    let data = [];\n\n    let runs = 0;\n\n    let startingLevel = this.universe === 2 ? this.level : 0;\n\n    for (let lev = startingLevel; lev < startingLevel + 10; lev++) {\n      runs = this.getTableCell(evolution, lev, runs);\n      data[lev] = [runs];\n    }\n\n    if (!this.atMaxEvo()) {\n      for (let lev = 0; lev < 10; lev++) {\n        runs = this.getTableCell(evolution + 1, lev, runs);\n        data[lev].push(runs);\n      }\n    }\n\n    return data as [number[]];\n  };\n\n  getLevelUpTable = (): Partial<{ [key: string]: number }> => {\n    let evolution = this.evolution;\n    let level = this.level;\n\n    let zone = this.universe === this.save.zone[0] ? this.save.zone[1] : 0;\n\n    let data = {};\n\n    let maxZone = this.zoneYouPortal + 100;\n    let zoneLastLeveled = zone;\n\n    // prettier-ignore\n    const currentRelativeExp = this.evolution === evolution ? this.currentExp : 0;\n    // prettier-ignore\n    let neededExpForLevel = this.getUpgradeExp(evolution, level, currentRelativeExp);\n\n    neededExpForLevel = neededExpForLevel - currentRelativeExp;\n\n    if (this.xpFromZone(zoneLastLeveled, maxZone) > neededExpForLevel) {\n      for (var z = zone; z < maxZone; z++) {\n        let collectedExp = this.xpFromZone(zoneLastLeveled, z + 1);\n        if (collectedExp >= neededExpForLevel) {\n          zoneLastLeveled = z;\n\n          if (level === 9) {\n            if (this.universe === 1 && evolution === maxEvolution) break;\n            evolution++;\n            level = 0;\n          } else {\n            level++;\n          }\n\n          let key: string;\n          if (this.universe === 2) {\n            key = \"\";\n          } else {\n            key = `E${evolution}`;\n          }\n\n          key += `L${level}`;\n\n          data = { ...data, [key]: z };\n\n          // prettier-ignore\n          neededExpForLevel = this.getUpgradeExp(evolution, level, currentRelativeExp);\n        } else {\n          continue;\n        }\n      }\n    }\n    return data;\n  };\n\n  updateUniverse = (universe: number) => {\n    this.universe = universe;\n    this.name = universe === 1 ? \"Fluffy\" : \"Scruffy\";\n\n    this.evolution =\n      universe === 1 ? this.save.fluffyPrestige : this.save.fluffyPrestige2;\n\n    this.exp = universe === 1 ? this.save.fluffyExp : this.save.fluffyExp2;\n\n    this.zoneYouPortal =\n      universe === 1 ? this.save.lastPortal : this.save.lastRadonPortal;\n\n    this.level = this.getLevel(this.evolution, this.exp);\n\n    this.currentExp = Math.ceil(\n      this.exp - this.removeExp(this.evolution, this.level)\n    );\n\n    this.heirloomBonus = getHeirloomValue(\n      this.save.heirloomBonus,\n      this.universe,\n      this.evolution,\n      this.level,\n      this.purchasedFluffyExpBonus\n    );\n\n    this.dailyBonus = getDailyBonus(\n      this.daily,\n      this.universe,\n      this.evolution,\n      this.level,\n      this.purchasedFluffyExpBonus\n    );\n  };\n\n  updateDisplayData = () => {\n    const neededExpForLevel = this.getUpgradeExp(this.evolution, this.level, 0);\n    const xpPerRun = Math.round(this.xpFromZone(0, this.zoneYouPortal));\n    const currentZone =\n      this.universe === this.save.zone[0] ? this.save.zone[1] : 0;\n\n    this.displayData = {\n      xpPerRun: xpPerRun,\n      table: this.getTableData(),\n      levelUpTable: this.getLevelUpTable(),\n      currentZone: currentZone,\n      percentToLevel: Number(\n        ((this.currentExp / neededExpForLevel) * 100).toFixed(2)\n      ),\n      bonesToLevel:\n        this.universe === 1\n          ? Math.ceil(\n            (neededExpForLevel - this.currentExp) / this.save.bestFluffyExp\n          ) * 100\n          : 0,\n      XPhr:\n        this.minutesPerRun > 0\n          ? Math.round((xpPerRun / this.minutesPerRun) * 60)\n          : 0,\n\n      name: this.name,\n    };\n  };\n\n  pasteSaveActions = (gameSave: GameObject) => {\n    this.save = {\n      fluffyExp: gameSave.global.fluffyExp,\n      fluffyExp2: gameSave.global.fluffyExp2,\n      fluffyPrestige: gameSave.global.fluffyPrestige,\n      fluffyPrestige2: gameSave.global.fluffyPrestige2,\n      lastPortal: gameSave.global.lastPortal,\n      lastRadonPortal: gameSave.global.lastRadonPortal,\n      bestFluffyExp: gameSave.stats.bestFluffyExp.valueTotal,\n      zone: [gameSave.global.universe, gameSave.global.world],\n      heirloomBonus: gameSave.heirlooms.Staff.FluffyExp.currentBonus,\n    };\n\n    this.autoBattle = gameSave.global.autoBattleData;\n    this.mutations = gameSave.global.u2MutationData;\n\n    this.daily = extend(true, {}, gameSave.global.dailyChallenge);\n    this.portal = extend(true, {}, gameSave.portal);\n\n    this.updateUniverse(gameSave.global.universe);\n\n    this.purchasedFluffyExpBonus = gameSave.talents.fluffyExp.purchased;\n\n    this.averageWorshippers =\n      this.universe === 2 ? gameSave.jobs.Worshipper.owned : 0;\n\n    this.purchasedFluffyPrestigeBonus =\n      gameSave.talents.fluffyAbility.purchased;\n\n    this.traps = extend(true, {}, gameSave.playerSpire.traps.Knowledge);\n\n    this.graphNextIce = gameSave.global.uberNature === \"Ice\";\n\n    this.iceBonus =\n      this.universe === 1 ? 1 + 0.0025 * gameSave.empowerments.Ice.level : 1;\n\n    this.frigidCompletions = gameSave.global.frigidCompletions;\n\n    this.expBonus = this.getExpBonus();\n\n    this.updateDisplayData();\n  };\n\n  saveLocalStorage = () => {\n    localStorage.setItem(\n      \"fluffy-fluffy\",\n      JSON.stringify({\n        instantUpdating: this.instantUpdating,\n        minutesPerRun: this.minutesPerRun,\n        spiresCompleted: this.spiresCompleted,\n      })\n    );\n  };\n\n  getLocalStorage = () => {\n    let saveObj = JSON.parse(localStorage.getItem(\"fluffy-fluffy\"));\n\n    this.instantUpdating = saveObj?.instantUpdating ?? false;\n    this.minutesPerRun = saveObj?.minutesPerRun ?? 0;\n    this.spiresCompleted = saveObj?.spiresCompleted ?? [];\n  };\n\n  changeVar = (label: string, value: string) => {\n    switch (label) {\n      case \"Capable Level\":\n        this.portal.Capable.level = Number(value);\n        break;\n      case \"Cunning Level\":\n        this.portal.Cunning.level = Number(value);\n        break;\n      case \"Curious Level\":\n        this.portal.Curious.level = Number(value);\n        break;\n      case \"Classy Level\":\n        this.portal.Classy.level = Number(value);\n        break;\n      case \"Zone You Portal\":\n        this.zoneYouPortal = Number(value);\n        break;\n      case \"Daily Bonus\":\n        this.dailyBonus = Number(value) / 100 + 1;\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Heirloom Bonus\":\n        this.heirloomBonus = Number(value) / 100 + 1;\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"List of Spire Clears\":\n        this.spiresCompleted = value.split(\",\").map(Number);\n        this.saveLocalStorage();\n        break;\n      case \"Knowledge Towers\":\n        this.traps.owned = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Knowledge Level\":\n        this.traps.level = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Frigid Completions\":\n        this.frigidCompletions = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Average Worshippers\":\n        this.averageWorshippers = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Minutes Per Run\":\n        this.minutesPerRun = Number(value);\n        this.saveLocalStorage();\n        break;\n    }\n  };\n}\n\nconst getHeirloomValue = (\n  bonus: number,\n  universe: number,\n  evolution: number,\n  level: number,\n  boughtEarly: boolean\n) => {\n  var b = bonus / 100 + 1;\n  if (\n    universe === 2 &&\n    !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\n  )\n    b = (b - 1) * 0.1 + 1;\n  if (b > 1) {\n    return b;\n  } else if (b === 1) {\n    return 1;\n  }\n};\n\nconst getDailyBonus = (\n  daily: DailyMods,\n  universe: number,\n  evolution: number,\n  level: number,\n  boughtEarly: boolean\n) => {\n  if (daily.seed) {\n    return (\n      getDailyHeliumValue(\n        countDailyWeightDaily(daily),\n        isRewardActive(\"dailies\", universe, evolution, level, boughtEarly)\n      ) /\n      100 +\n      1\n    );\n  } else {\n    return 1;\n  }\n};\n","import React, { createContext, useState } from \"react\";\r\nimport { fluffyInstance } from \"../../calculators/fluffy\";\r\n\r\ninterface ContextType {\r\n  fluffyInstances?: { [index: string]: fluffyInstance };\r\n  anotherInstance?: () => void;\r\n  shown?: number[];\r\n}\r\n\r\nexport const FluffyContext = createContext<ContextType>({});\r\n// const initial_dailies = maybeMakeDaily(365);\r\nconst FluffyProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [fluffyInstances, setFluffyInstance] = useState({\r\n    0: new fluffyInstance(),\r\n  });\r\n\r\n  const [shown, setShown] = useState([0]);\r\n\r\n  const anotherInstance = () => {\r\n    console.log(\"Adding another Fluffy Instance. Epic\");\r\n    setShown((old) => [...old, old.length - 1]);\r\n    setFluffyInstance((old) => {\r\n      return { ...old, [Object.keys(old).length]: new fluffyInstance() };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FluffyContext.Provider\r\n      value={{\r\n        fluffyInstances,\r\n        anotherInstance,\r\n        shown,\r\n      }}\r\n    >\r\n      {children}\r\n    </FluffyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FluffyProvider;\r\n","import clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport { fluffyInstance } from \"../../calculators/fluffy\";\r\nimport Button from \"../utils/Button\";\r\nimport Input from \"../utils/Input\";\r\nimport Label from \"../utils/Label\";\r\n\r\nconst TrueFalseButton = ({\r\n  colors,\r\n  onClick,\r\n  active,\r\n}: {\r\n  colors: boolean;\r\n  onClick: () => void;\r\n  active: boolean;\r\n}) => {\r\n  const [isActive, setIsActive] = useState(active);\r\n\r\n  let colorClasses: string = \"\";\r\n\r\n  if (colors) {\r\n    if (isActive) {\r\n      colorClasses = \"bg-tier3 text-black\";\r\n    } else {\r\n      colorClasses = \"bg-tier1 text-black\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          onClick();\r\n          setIsActive((prev) => !prev);\r\n        }}\r\n        className={clsx(\r\n          colors ? colorClasses : \"bg-secondary\",\r\n          \"p-1 pl-2 text-xs border border-solid border-accent rounded shadow cursor-pointer select-none sm:text-base\"\r\n        )}\r\n      >\r\n        {isActive ? \"True\" : \"False\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MemoTrueFalseButton = React.memo(TrueFalseButton);\r\n\r\ninterface Props {\r\n  index: number;\r\n  instance: fluffyInstance;\r\n  universe: number;\r\n  renderParent: () => void;\r\n}\r\n\r\nfunction InputSection({ index, instance, universe, renderParent }: Props) {\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const target: HTMLInputElement = e.target;\r\n\r\n    const label = target.labels![0].innerText;\r\n    const value = target.value;\r\n\r\n    instance.changeVar(label, value);\r\n\r\n    if (instance.instantUpdating) {\r\n      instance.updateDisplayData();\r\n      renderParent();\r\n    }\r\n  };\r\n\r\n  const handleClick = (type: string) => {\r\n    if (type === \"Instant Updating\") {\r\n      instance.instantUpdating = !instance.instantUpdating;\r\n      instance.saveLocalStorage();\r\n    }\r\n\r\n    if (type === \"Ice\") {\r\n      instance.graphNextIce = !instance.graphNextIce;\r\n\r\n      if (instance.instantUpdating) {\r\n        instance.expBonus = instance.getExpBonus();\r\n        instance.updateDisplayData();\r\n        renderParent();\r\n      }\r\n    }\r\n\r\n    if (type === \"Fluffocus\") {\r\n      instance.purchasedFluffyExpBonus = !instance.purchasedFluffyExpBonus;\r\n\r\n      if (instance.instantUpdating) {\r\n        instance.expBonus = instance.getExpBonus();\r\n        instance.updateDisplayData();\r\n        renderParent();\r\n      }\r\n    }\r\n\r\n    if (type === \"Calculate\") {\r\n      instance.updateDisplayData();\r\n      renderParent();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"grid gap-4 grid-cols-2 items-end mt-4 w-full\"\r\n        onChange={(e) => handleInput(e as React.ChangeEvent<HTMLInputElement>)}\r\n        key={instance.universe}\r\n      >\r\n        {/* U1 */}\r\n        {/*  Set mins and max's later */}\r\n        {instance?.name !== \"init\" && (\r\n          <>\r\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\r\n            {universe === 1 && (\r\n              <>\r\n                <Label>\r\n                  Capable Level\r\n                  <Input\r\n                    min={1}\r\n                    max={10}\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.portal?.Capable?.level || 0}\r\n                  />\r\n                </Label>\r\n                <Label>\r\n                  Cunning Level\r\n                  <Input\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.portal?.Cunning?.level || 0}\r\n                  />\r\n                </Label>\r\n\r\n                {!instance.portal.Curious.locked && (\r\n                  <Label>\r\n                    Curious Level\r\n                    <Input\r\n                      variant=\"fluffy\"\r\n                      defaultValue={instance?.portal?.Curious?.level || 0}\r\n                    />\r\n                  </Label>\r\n                )}\r\n\r\n                {!instance.portal.Classy.locked && (\r\n                  <Label>\r\n                    Classy Level\r\n                    <Input\r\n                      variant=\"fluffy\"\r\n                      defaultValue={instance?.portal?.Classy?.level || 0}\r\n                    />\r\n                  </Label>\r\n                )}\r\n              </>\r\n            )}\r\n            <Label>\r\n              Zone You Portal\r\n              <Input\r\n                min={instance.getMinZoneForExp()}\r\n                variant=\"fluffy\"\r\n                defaultValue={instance?.zoneYouPortal || 0}\r\n              />\r\n            </Label>\r\n            <Label>\r\n              Daily Bonus\r\n              <Input\r\n                variant=\"fluffy\"\r\n                defaultValue={Math.round(instance?.dailyBonus * 100) - 100 || 0}\r\n              />\r\n            </Label>\r\n            <Label>\r\n              Heirloom Bonus\r\n              <Input\r\n                variant=\"fluffy\"\r\n                defaultValue={\r\n                  Math.round(instance?.heirloomBonus * 100) - 100 || 0\r\n                }\r\n              />\r\n            </Label>\r\n            {universe === 1 && (\r\n              <Label>\r\n                List of Spire Clears\r\n                <Input defaultValue={String(instance.spiresCompleted || \"\")} />\r\n              </Label>\r\n            )}\r\n\r\n            {!instance?.traps.locked && (\r\n              <>\r\n                <Label>\r\n                  Knowledge Towers\r\n                  <Input\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.traps.owned || 0}\r\n                  />\r\n                </Label>\r\n                <Label>\r\n                  Knowledge Level\r\n                  <Input\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.traps.level || 0}\r\n                  />\r\n                </Label>\r\n              </>\r\n            )}\r\n\r\n            {universe === 1 && (\r\n              <Label>\r\n                Ice Enlightenment\r\n                <MemoTrueFalseButton\r\n                  colors={true}\r\n                  active={instance.graphNextIce}\r\n                  onClick={() => {\r\n                    handleClick(\"Ice\");\r\n                  }}\r\n                />\r\n              </Label>\r\n            )}\r\n\r\n            {universe === 1 && (\r\n              <Label>\r\n                Fluffocus Mastery\r\n                <MemoTrueFalseButton\r\n                  colors={true}\r\n                  active={instance.purchasedFluffyExpBonus}\r\n                  onClick={() => {\r\n                    handleClick(\"Fluffocus\");\r\n                  }}\r\n                />\r\n              </Label>\r\n            )}\r\n            \r\n            {universe === 1 && (\r\n              <Label>\r\n                Frigid Completions\r\n                <Input\r\n                  variant=\"fluffy\"\r\n                  max={15}\r\n                  defaultValue={instance?.frigidCompletions || 0}\r\n                  />\r\n              </Label>\r\n            )}\r\n\r\n            {universe === 2 && (\r\n              <Label>\r\n                Average Worshippers\r\n                <Input\r\n                  variant=\"fluffy\"\r\n                  max={50}\r\n                  defaultValue={instance.averageWorshippers}\r\n                />\r\n              </Label>\r\n            )}\r\n\r\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\r\n\r\n            <Label>\r\n              Minutes Per Run\r\n              <Input variant=\"fluffy\" defaultValue={instance.minutesPerRun} />\r\n            </Label>\r\n\r\n            <Label>\r\n              Instant Updating\r\n              <MemoTrueFalseButton\r\n                colors={true}\r\n                active={instance.instantUpdating}\r\n                onClick={() => handleClick(\"Instant Updating\")}\r\n              />\r\n            </Label>\r\n\r\n            <Button\r\n              className=\"col-span-2 text-center\"\r\n              label=\"Calculate\"\r\n              onClick={() => handleClick(\"Calculate\")}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(InputSection, (prevProps, nextProps) => {\r\n  return prevProps.universe === nextProps.universe;\r\n});\r\n","import React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  table: {\r\n    [key: string]: number;\r\n  };\r\n}\r\n\r\nfunction LevelUpTable({ table }: Props): ReactElement {\r\n  return (\r\n    <>\r\n      <table className=\"w-max text-center bg-secondary border border-solid border-prpl shadow-xl\">\r\n        <thead>\r\n          <tr className=\"bg-thirdary\">\r\n            <th className=\"cell\">💉</th>\r\n            <th className=\"cell\">On Zone</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(table).map((key, idx) => {\r\n            return (\r\n              <tr className=\"hover:bg-thirdary\" key={idx}>\r\n                <td className=\"cell font-bold bg-thirdary\">{key}</td>\r\n                <td className=\"cell\">{table[key]}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(LevelUpTable);\r\n","import React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  data: {\r\n    evolution: number;\r\n    level: number;\r\n    table: [number[]];\r\n  };\r\n  second: boolean;\r\n  time?: number;\r\n}\r\n\r\nfunction sformat(s: number) {\r\n  if (s === 0) return 0;\r\n  var fm = [\r\n    Math.floor(s / 60 / 60 / 24), // DAYS\r\n    Math.floor(s / 60 / 60) % 24, // HOURS\r\n    Math.floor(s / 60) % 60, // MINUTES\r\n    Math.floor(s % 60), // SECONDS\r\n  ];\r\n  return fm\r\n    .map(function (v) {\r\n      return (v < 10 ? \"0\" : \"\") + v;\r\n    })\r\n    .join(\":\")\r\n    .replace(/00:/g, \"\");\r\n}\r\n\r\nfunction RunTimeTable({ data, second, time }: Props): ReactElement {\r\n  return (\r\n    <>\r\n      <div className=\"my-2 text-xl\">{`E${data.evolution}L${data.level}`}</div>\r\n      <table className=\"w-full bg-secondary border border-solid border-prpl shadow-xl\">\r\n        <thead>\r\n          <tr className=\"bg-thirdary\">\r\n            <th className=\"cell\">💉</th>\r\n            <th className=\"cell\">{`Runs to E${data.evolution}`}</th>\r\n            {time! > 0 && (\r\n              <th className=\"cell\">{`Time to E${data.evolution}`}</th>\r\n            )}\r\n            {second && (\r\n              <th className=\"cell\">{`Runs to E${data.evolution + 1}`}</th>\r\n            )}\r\n            {second && time! > 0 && (\r\n              <th className=\"cell\">{`Time to E${data.evolution + 1}`}</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.table.map((cell, idx) => {\r\n            return (\r\n              <tr className=\"hover:bg-thirdary\" key={idx}>\r\n                <td className=\"cell font-bold bg-thirdary\">{`L${idx + 1}`}</td>\r\n                <td className=\"cell\">\r\n                  {cell[0] === 0 ? \"\" : cell[0].toFixed(2)}\r\n                </td>\r\n                {time! > 0 && (\r\n                  <td className=\"cell\">\r\n                    {cell[0] === 0 ? \"\" : sformat(cell[0] * time! * 60)}\r\n                  </td>\r\n                )}\r\n\r\n                {cell[1] !== undefined && (\r\n                  <>\r\n                    <td className=\"cell\">{cell[1].toFixed(2)}</td>\r\n                    {time! > 0 && (\r\n                      <td className=\"cell\">{sformat(cell[1] * time! * 60)}</td>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RunTimeTable;\r\n","import React, { ReactElement } from \"react\";\r\nimport { displayData } from \"../../calculators/fluffy\";\r\nimport { MemoInput as Input } from \"../utils/Input\";\r\nimport Label from \"../utils/Label\";\r\n\r\ninterface Props {\r\n  data: displayData;\r\n}\r\n\r\nfunction Stats({ data }: Props): ReactElement {\r\n  return (\r\n    <>\r\n      Extra Stats\r\n      <hr className=\"m-auto my-2 w-3/5 border-accent\" />\r\n      <div className=\"grid gap-3 grid-cols-2\">\r\n        {data.xpPerRun > 0 && (\r\n          <Label className=\"col-span-2\">\r\n            XP Per Run\r\n            <Input\r\n              value={addCommas(data.xpPerRun)}\r\n              disabled={true}\r\n              className=\"bg-thirdary\"\r\n            />\r\n          </Label>\r\n        )}\r\n        <Label className=\"col-span-2\">\r\n          Percent Of Level - {data.percentToLevel}%\r\n          <div className=\"flex w-full bg-thirdary border border-solid border-accent rounded\">\r\n            <div\r\n              className=\"flex flex-col p-1 text-xs bg-green-500 rounded sm:text-base\"\r\n              style={{ width: `${data.percentToLevel}%` }}\r\n            >\r\n              &nbsp;\r\n            </div>\r\n          </div>\r\n        </Label>\r\n        <Label>\r\n          Current Zone\r\n          <Input\r\n            value={data.currentZone}\r\n            disabled={true}\r\n            className=\"bg-thirdary\"\r\n          />\r\n        </Label>\r\n        {data.bonesToLevel > 0 && (\r\n          <Label>\r\n            Bones To Level\r\n            <Input\r\n              value={data.bonesToLevel}\r\n              disabled={true}\r\n              className=\"bg-thirdary\"\r\n            />\r\n          </Label>\r\n        )}\r\n\r\n        {data.XPhr > 0 && (\r\n          <Label className=\"col-span-2\">\r\n            {data.name} XP/hr\r\n            <Input\r\n              value={addCommas(data.XPhr)}\r\n              disabled={true}\r\n              className=\"bg-thirdary\"\r\n            />\r\n          </Label>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n\r\nfunction addCommas(x: number) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\nfunction UniverseSwitch({\r\n  onClick,\r\n  universe,\r\n}: {\r\n  onClick: (u: number) => void;\r\n  universe: number;\r\n}) {\r\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    let clickedNumber = Number((e.target as HTMLDivElement).title);\r\n    onClick(clickedNumber);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex mx-auto w-max shadow-md\">\r\n      <div\r\n        className={clsx(\r\n          universe === 1\r\n            ? \"bg-blue-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-1 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"1\"\r\n      >\r\n        Universe 1\r\n      </div>\r\n      <div\r\n        className={clsx(\r\n          universe === 2\r\n            ? \"bg-pink-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-1 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"2\"\r\n      >\r\n        Universe 2\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(UniverseSwitch);\r\n","import clsx from \"clsx\";\r\nimport React, {\r\n  MutableRefObject,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState\r\n} from \"react\";\r\nimport { fluffyInstance, handle_paste } from \"../../calculators/fluffy\";\r\nimport Button from \"../utils/Button\";\r\nimport InputSection from \"./InputSection\";\r\nimport LevelUpTable from \"./LevelUpTable\";\r\nimport RunTimeTable from \"./RunTimeTable\";\r\nimport Stats from \"./Stats\";\r\nimport UniverseSwitch from \"./UniverseSwitch\";\r\n\r\n// This keeps all update props.\r\n\r\nfunction SaveBox({\r\n  onPaste,\r\n  save,\r\n}: {\r\n  onPaste: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\r\n  save?: string;\r\n}) {\r\n  const [show, setShow] = useState(true);\r\n  const textRef = useRef() as MutableRefObject<HTMLTextAreaElement>;\r\n  return (\r\n    <>\r\n      {save && show && (\r\n        <Button\r\n          variant=\"small\"\r\n          className=\"col-span-2 self-center mb-4\"\r\n          onClick={() => {\r\n            textRef.current.innerText = save;\r\n            setShow(!show);\r\n          }}\r\n          label=\"Retrieve save\"\r\n        />\r\n      )}\r\n      <textarea\r\n        className=\"p-2 w-full text-sm bg-secondary border border-solid border-accent rounded outline-none shadow-md resize-none\"\r\n        onPaste={onPaste}\r\n        ref={textRef}\r\n        placeholder=\"Paste your save...\"\r\n      // defaultValue={instance?.string}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst MemoSaveBox = React.memo(SaveBox, (prevProps, nextProps) => {\r\n  return true;\r\n});\r\n\r\nfunction Template({\r\n  index,\r\n  instance,\r\n}: {\r\n  index: number;\r\n  instance: fluffyInstance;\r\n}) {\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  if (instance.name === \"init\") {\r\n    instance.getLocalStorage();\r\n  }\r\n\r\n  const forceRefresh = useCallback(() => {\r\n    setUpdate((prev) => !prev);\r\n  }, [setUpdate]);\r\n\r\n  const changeUniverse = useCallback(\r\n    (universe: number) => {\r\n      if (universe === instance.universe) return;\r\n\r\n      instance.updateUniverse(universe);\r\n      instance.expBonus = instance.getExpBonus();\r\n      instance.updateDisplayData();\r\n      forceRefresh();\r\n    },\r\n    [instance, forceRefresh]\r\n  );\r\n\r\n  const getPaste = (e: React.ClipboardEvent<HTMLTextAreaElement>) => {\r\n    let save = handle_paste(e);\r\n    if (save === false) return;\r\n    instance.pasteSaveActions(save.game);\r\n    instance.string = save.string;\r\n\r\n    forceRefresh();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid gap-2 grid-cols-1 content-center py-10 sm:grid-cols-2 md:gap-5 md:grid-cols-4 xl:grid-cols-10\">\r\n        {/* INPUT AREA */}\r\n        <div\r\n          className={clsx(\r\n            instance.name === \"init\"\r\n              ? \"col-span-10 justify-self-center w-1/2\"\r\n              : \"self-center xl:col-span-2 xl:col-start-2\",\r\n            \"flex flex-wrap justify-center\"\r\n          )}\r\n        >\r\n          <MemoSaveBox onPaste={getPaste} save={instance.string ?? null} />\r\n          {instance.name !== \"init\" && (\r\n            <InputSection\r\n              index={index}\r\n              instance={instance}\r\n              universe={instance.universe}\r\n              renderParent={forceRefresh}\r\n            />\r\n          )}\r\n        </div>\r\n        {instance.name !== \"init\" && (\r\n          <>\r\n            {/* TABLE AREA */}\r\n            <div className=\"text-center md:col-span-2 xl:col-span-4\">\r\n              <UniverseSwitch\r\n                universe={instance.universe}\r\n                onClick={changeUniverse}\r\n              />\r\n\r\n              <RunTimeTable\r\n                second={!instance.atMaxEvo()}\r\n                time={instance.minutesPerRun}\r\n                data={{\r\n                  evolution: instance.evolution,\r\n                  level: instance.level,\r\n                  table: instance.displayData.table,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* STATS AREA */}\r\n            <div className=\"text-center sm:col-span-2 sm:mt-3 md:col-span-1 md:mt-0 xl:col-span-2\">\r\n              <div className=\"m-auto w-1/2 md:w-auto\">\r\n                <Stats data={instance.displayData} />\r\n              </div>\r\n            </div>\r\n            {Object.keys(instance.displayData.levelUpTable).length > 0 && (\r\n              <div className=\"col-span-1 m-auto sm:col-span-2 md:col-span-4 xl:col-span-10\">\r\n                <LevelUpTable table={instance.displayData.levelUpTable} />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <hr className=\"m-auto w-4/6 border-prpl shadow\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Template, (prevProps, nextProps) => {\r\n  return prevProps.index === nextProps.index;\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { FluffyContext } from \"./Context\";\r\nimport Template from \"./Template\";\r\n\r\n// interface Props {\r\n\r\n// }\r\n\r\nfunction Fluffy() {\r\n  const { fluffyInstances, anotherInstance, shown } = useContext(FluffyContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-5\">\r\n        {shown!.map((x, index) => {\r\n          return (\r\n            <Template\r\n              index={index}\r\n              key={index}\r\n              instance={fluffyInstances![index]}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <div className=\"w-full\">\r\n          <div\r\n            className=\"relative m-auto w-32 h-32 text-primary fill-current cursor-pointer select-none\"\r\n            onClick={() => {\r\n              anotherInstance!();\r\n            }}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n            </svg>\r\n            <div className=\"absolute bottom-0 w-full text-center\">\r\n              Add Instance\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Fluffy;\r\n","import clsx from \"clsx\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst TITLES = { \"/fluffy\": \"Fluffy Calculator\", \"/daily\": \"Daily Seeker\" };\r\n\r\nconst swapTheme = (to: string) => {\r\n  if (to === \"light-theme\") {\r\n    localStorage.setItem(\"fluffy-theme\", \"light-theme\");\r\n    document.body.classList.replace(\"dark-theme\", \"light-theme\");\r\n  } else {\r\n    localStorage.setItem(\"fluffy-theme\", \"dark-theme\");\r\n    document.body.classList.replace(\"light-theme\", \"dark-theme\");\r\n  }\r\n};\r\n\r\nfunction ThemeSwitcher() {\r\n  return (\r\n    <div\r\n      className=\"absolute right-0 top-0 m-1 p-1 text-primary bg-secondary border border-solid border-green-400 shadow-xl invisible cursor-pointer select-none sm:visible\"\r\n      onClick={() => {\r\n        if (document.body.classList.contains(\"light-theme\")) {\r\n          swapTheme(\"dark-theme\");\r\n        } else {\r\n          swapTheme(\"light-theme\");\r\n        }\r\n      }}\r\n    >\r\n      Swap Theme\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Tab({ location, current }: { location: string; current: boolean }) {\r\n  return (\r\n    <Link\r\n      to={location}\r\n      className={clsx(\r\n        current && \"text-prpl border-b-2 border-prpl\",\r\n        \"inline-block p-3 pb-1 text-base font-extrabold\"\r\n      )}\r\n    >\r\n      {TITLES[location]}\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction NavBar() {\r\n  useEffect(() => {\r\n    swapTheme(localStorage.getItem(\"fluffy-theme\"));\r\n  }, []);\r\n\r\n  const location: Location = useLocation();\r\n\r\n  const currentLocation = location?.pathname;\r\n\r\n  document.title = TITLES[currentLocation] || \"Fluffy Calculator\";\r\n\r\n  return (\r\n    <div className=\"width-full text-center bg-thirdary shadow-md\">\r\n      <Tab\r\n        location=\"/fluffy\"\r\n        current={currentLocation === \"/\" || currentLocation === \"/fluffy\"}\r\n      />\r\n      <Tab location=\"/daily\" current={currentLocation === \"/daily\"} />\r\n\r\n      <ThemeSwitcher />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Daily from \"./components/Daily/Daily\";\r\nimport Fluffy from \"./components/Fluffy/Fluffy\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename=\"/\" hashType=\"noslash\">\r\n      <main>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/daily\" component={Daily} />\r\n          <Route path=\"/(fluffy|)\" component={Fluffy} />\r\n        </Switch>\r\n      </main>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./assets/index.css\";\r\nimport DailyProvider from \"./components/Daily/Context\";\r\nimport FluffyProvider from \"./components/Fluffy/Context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DailyProvider>\r\n      <FluffyProvider>\r\n        <App />\r\n      </FluffyProvider>\r\n    </DailyProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}